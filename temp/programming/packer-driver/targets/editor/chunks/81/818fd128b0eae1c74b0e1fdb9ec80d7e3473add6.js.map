{"version":3,"sources":["file:///D:/ProgramData/cocos/workplace/Gourmet/assets/script/UIStackManager.ts"],"names":["_decorator","ccclass","property","UIStackManager","UIStack","UIData","pushUI","UIName","data","push","popUI","length","currentUI","pop","previousUI","getUIData","instance"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBF,U;;gCAGjBG,c,WADZF,OAAO,CAAC,gBAAD,C,2BAAR,MACaE,cADb,CAC6B;AAAA;AAAA,eAEjBC,OAFiB,GAEC,EAFD;AAEM;AAFN,eAGjBC,MAHiB,GAGR,EAHQ;AAAA;;AAGH;AAEtB;AACAC,QAAAA,MAAM,CAACC,MAAD,EAASC,IAAI,GAAG,IAAhB,EAAsB;AACxB,eAAKJ,OAAL,CAAaK,IAAb,CAAkBF,MAAlB;;AACA,cAAIC,IAAJ,EAAU;AACN,iBAAKH,MAAL,CAAYE,MAAZ,IAAsBC,IAAtB,CADM,CACuB;AAChC;AACJ,SAXwB,CAazB;;;AACAE,QAAAA,KAAK,GAAG;AACJ,cAAI,KAAKN,OAAL,CAAaO,MAAb,GAAsB,CAA1B,EAA6B;AACzB,kBAAMC,SAAS,GAAG,KAAKR,OAAL,CAAaS,GAAb,EAAlB;AACA,kBAAMC,UAAU,GAAG,KAAKV,OAAL,CAAa,KAAKA,OAAL,CAAaO,MAAb,GAAsB,CAAnC,CAAnB;AACA,mBAAOG,UAAP;AACH;AACJ,SApBwB,CAsBzB;;;AACAC,QAAAA,SAAS,CAACR,MAAD,EAAS;AACd,iBAAO,KAAKF,MAAL,CAAYE,MAAZ,KAAuB,IAA9B;AACH;;AAzBwB,O,UAClBS,Q,GAAW,IAAIb,OAAJ,E","sourcesContent":["import { _decorator, Component, director, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIStackManager')\nexport class UIStackManager  {\n    static instance = new UIStackManager();\n    private UIStack: Node[] = [];  // 用于存储 UI 节点的堆栈\n    private UIData = {};  // 用于存储不同场景的数据\n\n    // 压入场景并传参\n    pushUI(UIName, data = null) {\n        this.UIStack.push(UIName);\n        if (data) {\n            this.UIData[UIName] = data;  // 存储传递的数据\n        }\n    }\n\n    // 弹出场景并返回数据\n    popUI() {\n        if (this.UIStack.length > 1) {\n            const currentUI = this.UIStack.pop();\n            const previousUI = this.UIStack[this.UIStack.length - 1];\n            return previousUI;\n        }\n    }\n\n    // 获取当前场景传递的数据\n    getUIData(UIName) {\n        return this.UIData[UIName] || null;\n    }\n}\n\n\n"]}