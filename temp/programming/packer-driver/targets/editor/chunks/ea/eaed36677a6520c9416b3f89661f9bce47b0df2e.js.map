{"version":3,"sources":["file:///D:/ProgramData/cocos/workplace/Gourmet/assets/script/SceneStackManager.ts"],"names":["_decorator","ccclass","property","SceneStackManager","sceneStack","sceneData","pushScene","sceneName","data","push","popScene","console","log","length","currentScene","pop","previousScene","getSceneData","instance"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBF,U;;mCAGjBG,iB,WADZF,OAAO,CAAC,mBAAD,C,2BAAR,MACaE,iBADb,CACgC;AAAA;AAAA,eAEpBC,UAFoB,GAEP,EAFO;AAAA,eAGpBC,SAHoB,GAGR,EAHQ;AAAA;;AAGH;AAEzB;AACAC,QAAAA,SAAS,CAACC,SAAD,EAAYC,IAAI,GAAG,IAAnB,EAAyB;AAC9B,eAAKJ,UAAL,CAAgBK,IAAhB,CAAqBF,SAArB;;AACA,cAAIC,IAAJ,EAAU;AACN,iBAAKH,SAAL,CAAeE,SAAf,IAA4BC,IAA5B,CADM,CAC6B;AACtC;AACJ,SAX2B,CAa5B;;;AACAE,QAAAA,QAAQ,GAAG;AACPC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,cAAI,KAAKR,UAAL,CAAgBS,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,kBAAMC,YAAY,GAAG,KAAKV,UAAL,CAAgBW,GAAhB,EAArB;AACA,kBAAMC,aAAa,GAAG,KAAKZ,UAAL,CAAgB,KAAKA,UAAL,CAAgBS,MAAhB,GAAyB,CAAzC,CAAtB;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAYI,aAAZ;AACH;AACJ,SArB2B,CAuB5B;;;AACAC,QAAAA,YAAY,CAACV,SAAD,EAAY;AACpB,iBAAO,KAAKF,SAAL,CAAeE,SAAf,KAA6B,IAApC;AACH;;AA1B2B,O,UACrBW,Q,GAAW,IAAIf,OAAJ,E","sourcesContent":["import { _decorator, Component, director, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SceneStackManager')\r\nexport class SceneStackManager  {\r\n    static instance = new SceneStackManager();\r\n    private sceneStack = [];\r\n    private sceneData = {};  // 用于存储不同场景的数据\r\n\r\n    // 压入场景并传参\r\n    pushScene(sceneName, data = null) {\r\n        this.sceneStack.push(sceneName);\r\n        if (data) {\r\n            this.sceneData[sceneName] = data;  // 存储传递的数据\r\n        }\r\n    }\r\n\r\n    // 弹出场景并返回数据\r\n    popScene() {\r\n        console.log(\"进入pop\");\r\n        if (this.sceneStack.length > 1) {\r\n            const currentScene = this.sceneStack.pop();\r\n            const previousScene = this.sceneStack[this.sceneStack.length - 1];\r\n            console.log(previousScene);\r\n        }\r\n    }\r\n\r\n    // 获取当前场景传递的数据\r\n    getSceneData(sceneName) {\r\n        return this.sceneData[sceneName] || null;\r\n    }\r\n}\r\n\r\n\r\n"]}