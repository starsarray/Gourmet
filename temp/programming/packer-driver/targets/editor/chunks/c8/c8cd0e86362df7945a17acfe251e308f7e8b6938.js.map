{"version":3,"sources":["file:///D:/ProgramData/cocos/workplace/Gourmet/assets/script/Recipes/IngredientSearch/IngredientSearch.ts"],"names":["_decorator","Button","Color","Component","instantiate","Label","Node","Prefab","Sprite","UITransform","RecipesGenerate","NavigationBar","ccclass","property","IngredientSearch","selectedIngredients","selectedCookingMethod","onLoad","generateIngredientButtons","generateCookingMethodButtons","scheduleOnce","updateScrollViewHeight","updateRecipeList","parentHeight","ingredientSearch","getComponent","height","otherComponentsHeight","calculateOtherComponentsHeight","remainingHeight","recipeList","getChildByName","content","totalHeight","ingredientsContainer","cookingMethodsContainer","ingredients","forEach","ingredient","button","ingredientButtonPrefab","label","getComponentInChildren","string","on","EventType","CLICK","onIngredientSelected","addChild","cookingMethods","method","cookingMethodButtonPrefab","onCookingMethodSelected","indexOf","filter","item","color","defaultColor","push","selectedColor","children","child","results","filterRecipes","updateRecipeDisplay","recipesGenerate","recipeData","recipes","recipe","every","includes","cooking_methods","removeAllChildren","listItem","recipeListItemPrefab","nameLabel","ingredientsLabel","seasoningsLabel","cookingMethodsLabel","name","join","seasonings","TOUCH_END","navigationBarComponent","navBar","goToDetailPage","contentUITransform","reduce","acc"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,S,OAAAA,S;AAAqBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAmBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;AACrGC,MAAAA,e,iBAAAA,e;;AAEAC,MAAAA,a,iBAAAA,a;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBb,U;;kCAGjBc,gB,WADZF,OAAO,CAAC,kBAAD,C,UAEHC,QAAQ,CAACP,IAAD,C,UAERO,QAAQ,CAACP,IAAD,C,UAERO,QAAQ,CAACP,IAAD,C,UAERO,QAAQ,CAACP,IAAD,C,UAERO,QAAQ,CAACP,IAAD,C,UAERO,QAAQ,CAACP,IAAD,C,UAERO,QAAQ,CAACN,MAAD,C,UAGRM,QAAQ,CAACN,MAAD,C,WAGRM,QAAQ,CAACN,MAAD,C,WAGRM,QAAQ;AAAA;AAAA,6C,WAGRA,QAAQ,CAACX,KAAD,C,WAGRW,QAAQ,CAACX,KAAD,C,2BA7Bb,MACaY,gBADb,SACsCX,SADtC,CACgD;AAAA;AAAA;;AAAA;;AAEZ;AAFY;;AAIR;AAJQ;;AAML;AANK;;AAQrB;AARqB;;AAUlB;AAVkB;;AAAA;;AAcJ;AAdI;;AAiBD;AAjBC;;AAoBP;AApBO;;AAuBF;AAvBE;;AA0BG;AA1BH;;AA6BK;AA7BL,eA+BpCY,mBA/BoC,GA+BJ,EA/BI;AA+BC;AA/BD,eAgCpCC,qBAhCoC,GAgCJ,EAhCI;AAAA;;AAgCC;AAE7CC,QAAAA,MAAM,GAAG;AACL;AACA,eAAKC,yBAAL;AACA,eAAKC,4BAAL,GAHK,CAIL;;AACA,eAAKC,YAAL,CAAkB,MAAM;AACpB,iBAAKC,sBAAL;AACA,iBAAMC,gBAAN;AACH,WAHD,EAGG,CAHH;AAIH;;AACDD,QAAAA,sBAAsB,GAAG;AACrB,gBAAME,YAAY,GAAG,KAAKC,gBAAL,CAAsBC,YAAtB,CAAmChB,WAAnC,EAAgDiB,MAArE;AACA,gBAAMC,qBAAqB,GAAG,KAAKC,8BAAL,EAA9B;AACA,gBAAMC,eAAe,GAAGN,YAAY,GAAGI,qBAAvC,CAHqB,CAIrB;;AACA,cAAIE,eAAe,GAAG,CAAtB,EAAyB;AACrB,iBAAKC,UAAL,CAAgBL,YAAhB,CAA6BhB,WAA7B,EAA0CiB,MAA1C,GAAmDG,eAAnD;AACA,iBAAKC,UAAL,CAAgBC,cAAhB,CAA+B,WAA/B,EAA4CN,YAA5C,CAAyDhB,WAAzD,EAAsEiB,MAAtE,GAA+EG,eAA/E;AACA,iBAAKC,UAAL,CAAgBC,cAAhB,CAA+B,MAA/B,EAAuCN,YAAvC,CAAoDhB,WAApD,EAAiEiB,MAAjE,GAA0EG,eAA1E;AACA,iBAAKG,OAAL,CAAaP,YAAb,CAA0BhB,WAA1B,EAAuCiB,MAAvC,GAAgDG,eAAhD;AACH;AACJ;;AACDD,QAAAA,8BAA8B,GAAG;AAC7B;AACA,cAAIK,WAAW,GAAG,KAAG,EAAH,GAAM,EAAxB;AACCA,UAAAA,WAAW,IAAI,KAAKC,oBAAL,CAA0BT,YAA1B,CAAuChB,WAAvC,EAAoDiB,MAApD,GACb,KAAKS,uBAAL,CAA6BV,YAA7B,CAA0ChB,WAA1C,EAAuDiB,MADzD;AAED,iBAAOO,WAAP;AACH;;AACDf,QAAAA,yBAAyB,GAAG;AACxB,gBAAMkB,WAAW,GAAG,CAAC,IAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,IAA1C,EAChB,IADgB,EACV,KADU,EACH,IADG,EACG,IADH,EACS,IADT,EACe,KADf,EACsB,IADtB,EAC4B,IAD5B,EACkC,IADlC,EACwC,IADxC,EAC8C,IAD9C,EACoD,IADpD,EAC0D,IAD1D,EACgE,KADhE,CAApB,CADwB,CAEqE;;AAE7FA,UAAAA,WAAW,CAACC,OAAZ,CAAoBC,UAAU,IAAI;AAC9B,kBAAMC,MAAM,GAAGnC,WAAW,CAAC,KAAKoC,sBAAN,CAA1B;AACA,kBAAMC,KAAK,GAAGF,MAAM,CAACG,sBAAP,CAA8BrC,KAA9B,CAAd;;AACA,gBAAIoC,KAAJ,EAAW;AACPA,cAAAA,KAAK,CAACE,MAAN,GAAeL,UAAf;AACH;;AACDC,YAAAA,MAAM,CAACK,EAAP,CAAU3C,MAAM,CAAC4C,SAAP,CAAiBC,KAA3B,EAAkC,MAAM,KAAKC,oBAAL,CAA0BR,MAA1B,EAAkCD,UAAlC,CAAxC,EAAuF,IAAvF;AACA,iBAAKJ,oBAAL,CAA0Bc,QAA1B,CAAmCT,MAAnC;AACH,WARD;AASH;;AAEDpB,QAAAA,4BAA4B,GAAG;AAC3B,gBAAM8B,cAAc,GAAG,CAAC,GAAD,EAAM,KAAN,EAAa,IAAb,EAAmB,MAAnB,EAA2B,KAA3B,CAAvB,CAD2B,CACgC;;AAE3DA,UAAAA,cAAc,CAACZ,OAAf,CAAuBa,MAAM,IAAI;AAC7B,kBAAMX,MAAM,GAAGnC,WAAW,CAAC,KAAK+C,yBAAN,CAA1B;AACA,kBAAMV,KAAK,GAAGF,MAAM,CAACG,sBAAP,CAA8BrC,KAA9B,CAAd;;AACA,gBAAIoC,KAAJ,EAAW;AACPA,cAAAA,KAAK,CAACE,MAAN,GAAeO,MAAf;AACH;;AACDX,YAAAA,MAAM,CAACK,EAAP,CAAU3C,MAAM,CAAC4C,SAAP,CAAiBC,KAA3B,EAAkC,MAAM,KAAKM,uBAAL,CAA6Bb,MAA7B,EAAqCW,MAArC,CAAxC,EAAsF,IAAtF;AACA,iBAAKf,uBAAL,CAA6Ba,QAA7B,CAAsCT,MAAtC;AACH,WARD;AASH;;AAEDQ,QAAAA,oBAAoB,CAACR,MAAD,EAAeD,UAAf,EAAmC;AACnD,cAAI,KAAKvB,mBAAL,CAAyBsC,OAAzB,CAAiCf,UAAjC,KAA8C,CAAC,CAAnD,EAAsD;AAClD;AACA,iBAAKvB,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBuC,MAAzB,CAAgCC,IAAI,IAAIA,IAAI,KAAKjB,UAAjD,CAA3B;AACAC,YAAAA,MAAM,CAACd,YAAP,CAAoBjB,MAApB,EAA4BgD,KAA5B,GAAoC,KAAKC,YAAzC;AACH,WAJD,MAIO;AACH;AACA,iBAAK1C,mBAAL,CAAyB2C,IAAzB,CAA8BpB,UAA9B;AACAC,YAAAA,MAAM,CAACd,YAAP,CAAoBjB,MAApB,EAA4BgD,KAA5B,GAAoC,KAAKG,aAAzC;AACH;;AACD,eAAKrC,gBAAL;AACH;;AAED8B,QAAAA,uBAAuB,CAACb,MAAD,EAAeW,MAAf,EAA+B;AAClD;AACA,eAAKf,uBAAL,CAA6ByB,QAA7B,CAAsCvB,OAAtC,CAA8CwB,KAAK,IAAI;AACnDA,YAAAA,KAAK,CAACpC,YAAN,CAAmBjB,MAAnB,EAA2BgD,KAA3B,GAAmC,KAAKC,YAAxC;AACH,WAFD;;AAGA,cAAG,KAAKzC,qBAAL,IAA4BkC,MAA/B,EAAsC;AAClC;AACA,iBAAKlC,qBAAL,GAA6BkC,MAA7B;AACAX,YAAAA,MAAM,CAACd,YAAP,CAAoBjB,MAApB,EAA4BgD,KAA5B,GAAoC,KAAKG,aAAzC;AACH,WAJD,MAIK;AACD,iBAAK3C,qBAAL,GAA6B,EAA7B;AACH;;AAED,eAAKM,gBAAL;AACH;;AAEDA,QAAAA,gBAAgB,GAAG;AACf,gBAAMwC,OAAO,GAAG,KAAKC,aAAL,EAAhB;AACA,eAAKC,mBAAL,CAAyBF,OAAzB;AACH;;AAEDC,QAAAA,aAAa,GAAe;AACxB;AACA,iBAAO,KAAKE,eAAL,CAAqBC,UAArB,CAAgCC,OAAhC,CAAwCb,MAAxC,CAA+Cc,MAAM,IACxD,KAAKrD,mBAAL,CAAyBsD,KAAzB,CAA+B/B,UAAU,IAAI8B,MAAM,CAAChC,WAAP,CAAmBkC,QAAnB,CAA4BhC,UAA5B,CAA7C,MACC,CAAC,KAAKtB,qBAAN,IAA+BoD,MAAM,CAACG,eAAP,CAAuBD,QAAvB,CAAgC,KAAKtD,qBAArC,CADhC,CADG,CAAP;AAIH;;AAEDgD,QAAAA,mBAAmB,CAACG,OAAD,EAAsB;AACrC;AACA,eAAKnC,OAAL,CAAawC,iBAAb;AAEAL,UAAAA,OAAO,CAAC9B,OAAR,CAAgB+B,MAAM,IAAI;AACtB,kBAAMK,QAAQ,GAAGrE,WAAW,CAAC,KAAKsE,oBAAN,CAA5B;AACA,kBAAMC,SAAS,GAAGF,QAAQ,CAAC1C,cAAT,CAAwB,WAAxB,EAAqCN,YAArC,CAAkDpB,KAAlD,CAAlB;AACA,kBAAMuE,gBAAgB,GAAGH,QAAQ,CAAC1C,cAAT,CAAwB,kBAAxB,EAA4CN,YAA5C,CAAyDpB,KAAzD,CAAzB;AACA,kBAAMwE,eAAe,GAAGJ,QAAQ,CAAC1C,cAAT,CAAwB,iBAAxB,EAA2CN,YAA3C,CAAwDpB,KAAxD,CAAxB;AACA,kBAAMyE,mBAAmB,GAAGL,QAAQ,CAAC1C,cAAT,CAAwB,qBAAxB,EAA+CN,YAA/C,CAA4DpB,KAA5D,CAA5B;AAEA,gBAAIsE,SAAJ,EAAeA,SAAS,CAAChC,MAAV,GAAmByB,MAAM,CAACW,IAA1B;AACf,gBAAIH,gBAAJ,EAAsBA,gBAAgB,CAACjC,MAAjB,GAA2B,MAAKyB,MAAM,CAAChC,WAAP,CAAmB4C,IAAnB,CAAwB,GAAxB,CAA6B,EAA7D,CARA,CAStB;;AACA,gBAAIH,eAAJ,EAAqB;AACjB,kBAAGT,MAAM,CAACa,UAAP,IAAqB,EAAxB,EACIJ,eAAe,CAAClC,MAAhB,GAA0B,MAAKyB,MAAM,CAACa,UAAP,CAAkBD,IAAlB,CAAuB,GAAvB,CAA4B,EAA3D,CADJ,KAEI;AACAH,gBAAAA,eAAe,CAAClC,MAAhB,GAA0B,MAA1B;AACH;AACJ;;AACD,gBAAImC,mBAAJ,EAAyBA,mBAAmB,CAACnC,MAApB,GAA8B,QAAOyB,MAAM,CAACG,eAAP,CAAuBS,IAAvB,CAA4B,KAA5B,CAAmC,EAAxE,CAjBH,CAkBtB;;AACAP,YAAAA,QAAQ,CAAC7B,EAAT,CAAYtC,IAAI,CAACuC,SAAL,CAAeqC,SAA3B,EAAsC,MAAM;AACxC,oBAAMC,sBAAsB,GAAG,KAAKC,MAAL,CAAY3D,YAAZ;AAAA;AAAA,iDAA/B;;AACA,kBAAI0D,sBAAJ,EAA4B;AACxBA,gBAAAA,sBAAsB,CAACE,cAAvB,CAAsCjB,MAAtC,EADwB,CACwB;AACnD;AACR,aALG;AAMA,iBAAKpC,OAAL,CAAagB,QAAb,CAAsByB,QAAtB;AACH,WA1BD,EAJqC,CA+BrC;;AACA,eAAKrD,YAAL,CAAkB,MAAM;AACpB,kBAAMkE,kBAAkB,GAAG,KAAKtD,OAAL,CAAaP,YAAb,CAA0BhB,WAA1B,CAA3B;AACA6E,YAAAA,kBAAkB,CAAC5D,MAAnB,GAA4B,KAAKM,OAAL,CAAa4B,QAAb,CAAsB2B,MAAtB,CAA6B,CAACC,GAAD,EAAM3B,KAAN,KAAgB2B,GAAG,GAAG3B,KAAK,CAACpC,YAAN,CAAmBhB,WAAnB,EAAgCiB,MAAnF,EAA2F,CAA3F,CAA5B;AACH,WAHD,EAGG,CAHH;AAIH;;AA1K2C,O;;;;;iBAEnB,I;;;;;;;iBAEI,I;;;;;;;iBAEG,I;;;;;;;iBAEhB,I;;;;;;;iBAEG,I;;;;;;;iBAEJ,I;;;;;;;iBAEkB,I;;;;;;;iBAGG,I;;;;;;;iBAGL,I;;;;;;;iBAGI,I;;;;;;;iBAGZ,IAAIxB,KAAJ,CAAU,EAAV,EAAc,GAAd,EAAmB,CAAnB,C;;;;;;;iBAGD,IAAIA,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,C","sourcesContent":["import { _decorator, Button, Color, Component, director, instantiate, Label, Node, Prefab, ScrollBar, Sprite, UITransform } from 'cc';\nimport { RecipesGenerate } from '../RecipesGenerate';\nimport { UIStackManager } from '../../UIStackManager';\nimport { NavigationBar } from '../NavigationBar';\nconst { ccclass, property } = _decorator;\n\n@ccclass('IngredientSearch')\nexport class IngredientSearch extends Component {\n    @property(Node)\n    ingredientSearch: Node = null;  // 食材搜索区域\n    @property(Node)\n    ingredientsContainer: Node = null;  // 多选食材区域\n    @property(Node)\n    cookingMethodsContainer: Node = null;  // 单选烹饪方式区域\n    @property(Node)\n    content: Node = null;  // 筛选结果内容区域\n    @property(Node)\n    recipeList: Node = null;  // 筛选结果列表区域\n    @property(Node)\n    navBar: Node = null;\n    @property(Prefab)\n    ingredientButtonPrefab: Prefab = null;  // 预制件，用于生成食材按钮\n\n    @property(Prefab)\n    cookingMethodButtonPrefab: Prefab = null;  // 预制件，用于生成烹饪方式按钮\n\n    @property(Prefab)\n    recipeListItemPrefab: Prefab = null; // 筛选结果列表项预制体\n\n    @property(RecipesGenerate)\n    recipesGenerate: RecipesGenerate = null;  // 绑定 RecipesGenerate 脚本\n\n    @property(Color)\n    selectedColor: Color = new Color(53, 192, 0);  // 选中时背景颜色 35C000\n\n    @property(Color)\n    defaultColor: Color = new Color(225, 255, 160);  // 默认背景颜色 E1FFA0\n\n    private selectedIngredients: string[] = [];  // 已选择的食材列表\n    private selectedCookingMethod: string = '';  // 已选择的烹饪方式\n\n    onLoad() {\n        // 初始化食材按钮和烹饪方式按钮\n        this.generateIngredientButtons();\n        this.generateCookingMethodButtons();\n        //等待按钮高度确定\n        this.scheduleOnce(() => {\n            this.updateScrollViewHeight();\n            this .updateRecipeList();\n        }, 0);\n    }\n    updateScrollViewHeight() {\n        const parentHeight = this.ingredientSearch.getComponent(UITransform).height;\n        const otherComponentsHeight = this.calculateOtherComponentsHeight();\n        const remainingHeight = parentHeight - otherComponentsHeight;\n        // 确保剩余高度大于0\n        if (remainingHeight > 0) {\n            this.recipeList.getComponent(UITransform).height = remainingHeight;\n            this.recipeList.getChildByName(\"scrollBar\").getComponent(UITransform).height = remainingHeight;\n            this.recipeList.getChildByName(\"view\").getComponent(UITransform).height = remainingHeight;\n            this.content.getComponent(UITransform).height = remainingHeight;\n        }\n    }\n    calculateOtherComponentsHeight() {\n        // 计算上方不确定大小组件的总高度\n        let totalHeight = 50+50+50;\n         totalHeight += this.ingredientsContainer.getComponent(UITransform).height \n         + this.cookingMethodsContainer.getComponent(UITransform).height;\n        return totalHeight;\n    }\n    generateIngredientButtons() {\n        const ingredients = [\"鸡蛋\",  \"猪肉\", \"鸡肉\", \"牛肉\", \"羊肉\", \"鱼\", \"虾\", \"香肠\", \n            \"土豆\", \"胡萝卜\", \"黄瓜\", \"白菜\", \"包菜\", \"白萝卜\", \"花菜\", \"番茄\", \"洋葱\", \"莴笋\", \"菌菇\", \"茄子\", \"豆腐\", \"西葫芦\"];  // 示例食材\n\n        ingredients.forEach(ingredient => {\n            const button = instantiate(this.ingredientButtonPrefab);\n            const label = button.getComponentInChildren(Label);\n            if (label) {\n                label.string = ingredient;\n            }\n            button.on(Button.EventType.CLICK, () => this.onIngredientSelected(button, ingredient), this);\n            this.ingredientsContainer.addChild(button);\n        });\n    }\n\n    generateCookingMethodButtons() {\n        const cookingMethods = [\"锅\", \"电饭煲\", \"烤箱\", \"空气炸锅\", \"微波炉\"];  // 示例烹饪方式\n\n        cookingMethods.forEach(method => {\n            const button = instantiate(this.cookingMethodButtonPrefab);\n            const label = button.getComponentInChildren(Label);\n            if (label) {\n                label.string = method;\n            }\n            button.on(Button.EventType.CLICK, () => this.onCookingMethodSelected(button, method), this);\n            this.cookingMethodsContainer.addChild(button);\n        });\n    }\n\n    onIngredientSelected(button: Node, ingredient: string) {\n        if (this.selectedIngredients.indexOf(ingredient)!=-1) {\n            // 如果已选中，则取消选择\n            this.selectedIngredients = this.selectedIngredients.filter(item => item !== ingredient);\n            button.getComponent(Sprite).color = this.defaultColor;\n        } else {\n            // 如果未选中，则选择\n            this.selectedIngredients.push(ingredient);\n            button.getComponent(Sprite).color = this.selectedColor;\n        }\n        this.updateRecipeList();\n    }\n\n    onCookingMethodSelected(button: Node, method: string) {\n        // 清除其他按钮的选中状态\n        this.cookingMethodsContainer.children.forEach(child => {\n            child.getComponent(Sprite).color = this.defaultColor;\n        });\n        if(this.selectedCookingMethod!=method){\n            // 选择当前按钮\n            this.selectedCookingMethod = method;\n            button.getComponent(Sprite).color = this.selectedColor;\n        }else{\n            this.selectedCookingMethod = '';\n        }\n\n        this.updateRecipeList();\n    }\n\n    updateRecipeList() {\n        const results = this.filterRecipes();\n        this.updateRecipeDisplay(results);\n    }\n\n    filterRecipes(): Array<any> {\n        // 结合已选食材和烹饪方式过滤食谱\n        return this.recipesGenerate.recipeData.recipes.filter(recipe => \n            this.selectedIngredients.every(ingredient => recipe.ingredients.includes(ingredient)) &&\n            (!this.selectedCookingMethod || recipe.cooking_methods.includes(this.selectedCookingMethod))\n        );\n    }\n\n    updateRecipeDisplay(recipes: Array<any>) {\n        // 清空当前显示的结果\n        this.content.removeAllChildren();\n\n        recipes.forEach(recipe => {\n            const listItem = instantiate(this.recipeListItemPrefab);\n            const nameLabel = listItem.getChildByName(\"NameLabel\").getComponent(Label);\n            const ingredientsLabel = listItem.getChildByName(\"IngredientsLabel\").getComponent(Label);\n            const seasoningsLabel = listItem.getChildByName(\"SeasoningsLabel\").getComponent(Label);\n            const cookingMethodsLabel = listItem.getChildByName(\"CookingMethodsLabel\").getComponent(Label);\n\n            if (nameLabel) nameLabel.string = recipe.name;\n            if (ingredientsLabel) ingredientsLabel.string = `食材：${recipe.ingredients.join(\",\")}`;\n            // 设置配料\n            if (seasoningsLabel) {\n                if(recipe.seasonings != \"\")\n                    seasoningsLabel.string = `配料：${recipe.seasonings.join(\",\")}`;\n                else{\n                    seasoningsLabel.string = `配料：无`;\n                }\n            }\n            if (cookingMethodsLabel) cookingMethodsLabel.string = `烹饪方式：${recipe.cooking_methods.join(\" 或 \")}`;\n            // 添加点击事件，跳转到详情页面并传参\n            listItem.on(Node.EventType.TOUCH_END, () => {\n                const navigationBarComponent = this.navBar.getComponent(NavigationBar);\n                if (navigationBarComponent) {\n                    navigationBarComponent.goToDetailPage(recipe);  // 调用实例的方法\n                }\n        });\n            this.content.addChild(listItem);\n        });\n        // 更新滚动视图内容尺寸\n        this.scheduleOnce(() => {\n            const contentUITransform = this.content.getComponent(UITransform);\n            contentUITransform.height = this.content.children.reduce((acc, child) => acc + child.getComponent(UITransform).height, 0);\n        }, 0);\n    }\n}\n\n\n"]}