{"version":3,"sources":["file:///D:/ProgramData/cocos/workplace/Gourmet/assets/script/Recipes/NavigationBar.ts"],"names":["_decorator","Button","Color","Component","instantiate","Label","Node","Prefab","resources","RichText","Sprite","SpriteFrame","sys","UITransform","UIStackManager","ccclass","property","NavigationBar","activeColor","defaultColor","onLoad","goToHome","instance","popUI","pushUI","homePanel","active","navBar","ingredientSearchPanel","randomRecipePanel","highlightButton","homeButton","goToIngredientSearch","ingredientSearchButton","goToRandomRecipe","randomRecipeButton","goToDetailPage","recipe","content","removeAllChildren","detailPage","RecipeListitem","RecipeDetail","Fiamge","Foodimage","Rtext1","Rtext2","getChildByName","getComponent","string","name","ingredients","join","seasonings","cooking_methods","load","image","err","spriteFrame","console","error","sprite","texture","originalWidth","width","originalHeight","height","uiTransform","setContentSize","link","horizontalAlign","on","EventType","TOUCH_END","event","extractLinkFromRichText","isMobile","window","location","href","open","details","addChild","scheduleOnce","contentUITransform","children","reduce","acc","child","richTextString","match","goBackToPreviousUI","activeButton","setButtonColor","button","color","node"],"mappings":"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","sourcesContent":["import { _decorator, Button, Color, color, Component, director, instantiate, Label, Node, Prefab, resources, RichText, Sprite, SpriteFrame, sys, UITransform } from 'cc';\nimport { UIStackManager } from '../UIStackManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('NavigationBar')\nexport class NavigationBar extends Component {\n    @property(Node)\n    homePanel: Node = null;\n\n    @property(Node)\n    ingredientSearchPanel: Node = null;\n\n    @property(Node)\n    randomRecipePanel: Node = null\n    @property(Node)\n    navBar: Node = null;\n\n    @property(Node)\n    detailPage: Node = null;\n    @property(Node)\n    content: Node = null;\n    @property(Prefab)\n    RecipeDetail: Node = null;\n    @property(Prefab)\n    RichText: Node = null;\n    @property(Prefab)\n    Foodimage: Node = null;\n    @property(Button)\n    homeButton: Button = null;\n\n    @property(Button)\n    ingredientSearchButton: Button = null;\n\n    @property(Button)\n    randomRecipeButton: Button = null;\n\n    // 当前活动按钮的颜色\n    activeColor: Color = new Color(0, 224, 255); // 00E0FF \n    // 默认按钮颜色\n    defaultColor: Color = new Color(255, 255, 255);  // 默认颜色为白色\n\n    onLoad() {\n        this.goToHome();\n    }\n\n    goToHome() {\n        // 切换到主页逻辑并高亮按钮\n        UIStackManager.instance.popUI();\n        UIStackManager.instance.pushUI(this.homePanel);\n        this.homePanel.active = true;\n        this.navBar.active = true;\n        this.ingredientSearchPanel.active = false;\n        this.randomRecipePanel.active = false;\n        this.highlightButton(this.homeButton);\n    }\n\n    goToIngredientSearch() {\n        // 切换到食材检索页面逻辑并高亮按钮\n        UIStackManager.instance.popUI();\n        UIStackManager.instance.pushUI(this.ingredientSearchPanel);\n        this.homePanel.active = false;\n        this.navBar.active = true;\n        this.ingredientSearchPanel.active = true;\n        this.randomRecipePanel.active = false;\n        this.highlightButton(this.ingredientSearchButton);\n    }\n\n    goToRandomRecipe() {\n        // 切换到随机食谱页面逻辑并高亮按钮\n        UIStackManager.instance.popUI();\n        UIStackManager.instance.pushUI(this.randomRecipePanel);\n        this.homePanel.active = false;\n        this.navBar.active = true;\n        this.ingredientSearchPanel.active = false;\n        this.randomRecipePanel.active = true;\n        this.highlightButton(this.randomRecipeButton);\n    }\n    // 进入详情页面\n    goToDetailPage(recipe : any) {\n        // 清空当前列表\n        this.content.removeAllChildren();\n        UIStackManager.instance.pushUI(this.detailPage);\n        this.detailPage.active = true;\n        this.navBar.active = false;\n        this.homePanel.active = false;\n        this.ingredientSearchPanel.active = false;\n        this.randomRecipePanel.active = false;\n        // 实例化节点\n        const RecipeListitem = instantiate(this.RecipeDetail);\n        const Fiamge = instantiate(this.Foodimage);\n        const Rtext1 = instantiate(this.RichText);\n        const Rtext2 = instantiate(this.RichText);\n        // 设置食谱内容\n        RecipeListitem.getChildByName(\"NameLabel\").getComponent(Label).string = recipe.name;\n        RecipeListitem.getChildByName(\"IngredientsLabel\").getComponent(Label).string = `食材：${recipe.ingredients.join(\",\")}`;\n        if(recipe.seasonings != \"\")\n          RecipeListitem.getChildByName(\"SeasoningsLabel\").getComponent(Label).string = `配料：${recipe.seasonings.join(\",\")}`;\n        else {RecipeListitem.getChildByName(\"SeasoningsLabel\").getComponent(Label).string = `配料：无`;}\n        RecipeListitem.getChildByName(\"CookingMethodsLabel\").getComponent(Label).string = `烹饪方式：${recipe.cooking_methods.join(\" 或 \")}`;\n        // 加载并设置图片\n        resources.load(recipe.image, SpriteFrame, (err, spriteFrame) => {\n            if (err) {\n                console.error(\"Failed to load image:\", err);\n                return;\n            }\n            // 获取 Sprite 组件并设置 spriteFrame\n            const sprite = Fiamge.getComponent(Sprite);\n            if (sprite) {\n                sprite.spriteFrame = spriteFrame;\n\n                // 获取图片的原始尺寸\n                const texture = spriteFrame.texture;\n                const originalWidth = texture.width;\n                const originalHeight = texture.height;\n\n                // 获取并调整 UITransform 的尺寸\n                const uiTransform = Fiamge.getComponent(UITransform);\n                if (uiTransform) {\n                    uiTransform.setContentSize(originalWidth*0.5, originalHeight*0.5);\n                }\n            }\n        }); \n        Rtext1.getComponent(RichText).string = recipe.link;\n        Rtext1.getComponent(RichText).horizontalAlign = 1 ;//内容居中\n        // 使用 TOUCH_END 监听点击事件\n        Rtext1.on(Node.EventType.TOUCH_END, (event) => {\n            const link = this.extractLinkFromRichText(Rtext1.getComponent(RichText).string);\n            if (link) {\n                if (sys.isMobile) {\n                    // 在移动设备上使用 window.location.href\n                    window.location.href = link;\n                } else {\n                    // 在桌面设备上使用 window.open\n                    window.open(link, '_blank');\n                }\n            }\n        });\n        Rtext2.getComponent(RichText).string = recipe.details;\n        this.detailPage.addChild(RecipeListitem);\n        this.content.addChild(Fiamge);\n        this.content.addChild(Rtext1);\n        this.content.addChild(Rtext2);\n        // 更新滚动视图内容尺寸\n        this.scheduleOnce(() => {\n            const contentUITransform = this.content.getComponent(UITransform);\n            contentUITransform.height = this.content.children.reduce((acc, child) => acc + child.getComponent(UITransform).height, 0);\n        }, 0);\n    }\n    extractLinkFromRichText(richTextString: string): string | null {\n        // 使用正则表达式匹配 href 属性并提取链接\n        const match = richTextString.match(/href=\"([^\"]+)\"/);\n        return match ? match[1] : null;\n    }\n    // 返回上一个UI\n    goBackToPreviousUI() {\n        this.detailPage.active = false;\n        this.navBar.active = true;\n        this.homePanel.active = false;\n        this.ingredientSearchPanel.active = false;\n        this.randomRecipePanel.active = false;\n        UIStackManager.instance.popUI().active = true;  \n    }\n    // 设置按钮高亮，并将其他按钮恢复默认颜色\n    highlightButton(activeButton: Button) {\n        // 重置所有按钮的颜色\n        this.setButtonColor(this.homeButton, this.defaultColor);\n        this.setButtonColor(this.ingredientSearchButton, this.defaultColor);\n        this.setButtonColor(this.randomRecipeButton, this.defaultColor);\n\n        // 设置当前按钮为高亮颜色\n        this.setButtonColor(activeButton, this.activeColor);\n    }\n    setButtonColor(button: Button, color: Color) {\n        const sprite = button.node.getComponent(Sprite);\n        if (sprite) {\n            sprite.color = color;\n        }\n    }\n}\n\n\n"]}